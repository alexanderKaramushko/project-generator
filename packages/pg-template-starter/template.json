{
  "react-typescript": {
    "projects": {
      "package.json": {
        "name": "pg-template-structure",
        "version": "1.0.0",
        "description": "Стартовые внутренние файловые структуры проектов по пресетам.",
        "license": "MIT",
        "repository": {
          "type": "git",
          "url": "https://github.com/alexanderKaramushko/project-generator.git",
          "directory": "packages/pg-template-structure"
        },
        "keywords": [
          "starter-structure",
          "project-generator",
          "files"
        ],
        "main": "./presets",
        "engines": {
          "node": ">=14"
        },
        "scripts": {
          "lint": "eslint .",
          "lint:fix": "eslint . --fix"
        },
        "devDependencies": {
          "@antfu/eslint-config": "3.13.0",
          "pg-template-builder": "latest",
          "@types/jest": "^29.5.12",
          "eslint": "9.17.0",
          "jest": "29.4.1",
          "ts-jest": "29.0.5",
          "ts-node": "10.9.1",
          "typescript": "^5.5.4"
        }
      },
      "project/package.json": {
        "name": "react-typescript-starter",
        "version": "1.0.0",
        "description": "Стартовый шаблон проекта на React и Typescript",
        "license": "MIT",
        "repository": {
          "type": "git",
          "url": "https://example.com",
          "directory": "src"
        },
        "keywords": [
          "react",
          "typescript",
          "project"
        ],
        "main": ".",
        "engines": {
          "node": ">=14"
        },
        "scripts": {
          "start": "pg-template-builder-cli start",
          "build": "pg-template-builder-cli build"
        },
        "dependencies": {
          "core-js": "^3.40.0",
          "react": "18.0.0",
          "react-dom": "18.0.0",
          "react-router": "^7.2.0",
          "react-router-dom": "^7.2.0"
        },
        "devDependencies": {
          "@types/react": "^19.0.10",
          "@types/react-dom": "^19.0.4",
          "pg-template-builder": "latest"
        }
      }
    },
    "configs": {
      "eslint.config.mjs": [
        "import antfu from '@antfu/eslint-config';",
        "",
        "const OFF = 0;",
        "// eslint-disable-next-line unused-imports/no-unused-vars",
        "const WARNING = 1;",
        "const ERROR = 2;",
        "",
        "const ENABLE = 'always';",
        "const DISABLE = 'never';",
        "",
        "export default antfu(",
        "  {",
        "    typescript: {",
        "      overrides: {",
        "        'ts/no-use-before-define': ERROR,",
        "        'ts/no-shadow': ERROR,",
        "        'ts/no-unused-vars': [",
        "          ERROR,",
        "          {",
        "            args: 'after-used',",
        "            vars: 'all',",
        "            ignoreRestSiblings: false,",
        "          },",
        "        ],",
        "      },",
        "    },",
        "    javascript: {",
        "      overrides: {",
        "        'no-unused-vars': OFF,",
        "        'no-shadow': OFF,",
        "        'implicit-arrow-linebreak': OFF,",
        "        'linebreak-style': OFF,",
        "        'padding-line-between-statements': [",
        "          ERROR,",
        "          {",
        "            blankLine: ENABLE,",
        "            prev: '*',",
        "            next: 'block-like',",
        "          },",
        "          {",
        "            blankLine: ENABLE,",
        "            prev: 'block-like',",
        "            next: '*',",
        "          },",
        "          {",
        "            blankLine: ENABLE,",
        "            prev: ['const', 'let'],",
        "            next: ['block-like', 'expression'],",
        "          },",
        "        ],",
        "        'object-property-newline': ERROR,",
        "        'object-curly-newline': [",
        "          ERROR,",
        "          {",
        "            ObjectPattern: {",
        "              multiline: true,",
        "            },",
        "            ExportDeclaration: {",
        "              multiline: true,",
        "              minProperties: 3,",
        "            },",
        "          },",
        "        ],",
        "        'lines-between-class-members': [",
        "          ERROR,",
        "          ENABLE,",
        "          {",
        "            exceptAfterSingleLine: true,",
        "          },",
        "        ],",
        "        'padded-blocks': [",
        "          ERROR,",
        "          {",
        "            classes: ENABLE,",
        "          },",
        "        ],",
        "        'max-len': [",
        "          ERROR,",
        "          {",
        "            code: 120,",
        "            ignoreStrings: true,",
        "            ignoreTemplateLiterals: true,",
        "            ignoreUrls: true,",
        "          },",
        "        ],",
        "        'no-console': ERROR,",
        "        'no-debugger': ERROR,",
        "        'no-multiple-empty-lines': [",
        "          ERROR,",
        "          {",
        "            max: 1,",
        "            maxBOF: 0,",
        "            maxEOF: 0,",
        "          },",
        "        ],",
        "        'quotes': [ERROR, 'single'],",
        "        'no-restricted-syntax': [OFF, 'TSEnumDeclaration[const=true]'],",
        "      },",
        "    },",
        "    stylistic: {",
        "      indent: 2,",
        "      quotes: 'single',",
        "      semi: true,",
        "    },",
        "  },",
        "  {",
        "    files: ['**/*.ts', '**/*.tsx'],",
        "    rules: {",
        "      'sort-keys': [",
        "        ERROR,",
        "        'asc',",
        "        {",
        "          caseSensitive: true,",
        "          natural: false,",
        "        },",
        "      ],",
        "    },",
        "  },",
        "  {",
        "    rules: {",
        "      'import/prefer-default-export': OFF,",
        "      'import/no-unresolved': OFF,",
        "      'import/extensions': [",
        "        ERROR,",
        "        'ignorePackages',",
        "        {",
        "          '': DISABLE,",
        "          'js': DISABLE,",
        "          'ts': DISABLE,",
        "          'tsx': DISABLE,",
        "        },",
        "      ],",
        "      'perfectionist/sort-imports': [",
        "        ERROR,",
        "        {",
        "          groups: [",
        "            'type',",
        "            ['builtin', 'external'],",
        "            'internal-type',",
        "            'internal',",
        "            ['parent-type', 'sibling-type', 'index-type'],",
        "            ['parent', 'sibling', 'index'],",
        "            'object',",
        "            'unknown',",
        "          ],",
        "        },",
        "      ],",
        "    },",
        "  },",
        ");",
        ""
      ],
      "jest.config.json": {
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js"
        ],
        "moduleNameMapper": {
          "^src\"/(.*)": "<rootDir>/src/$1"
        },
        "testEnvironment": "node",
        "testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",
        "transform": {
          "^.+\\.(t|j)s\"\\?$": [
            "ts-jest",
            {
              "tsconfig": "tsconfig.test.json"
            }
          ]
        },
        "setupFilesAfterEnv": ["<rootDir>/jest/setup.js"]
      },
      "project/tsconfig.json": {
        "compilerOptions": {
          "target": "ESNext",
          "jsx": "react-jsx",
          "module": "ESNext",
          "moduleResolution": "node",
          "paths": {
            "client/*": [
              "./src/*"
            ],
            "stories/*": [
              "./stories/*"
            ]
          },
          "types": [
            "node",
            "jest"
          ],
          "resolveJsonModule": true,
          "allowJs": true,
          "sourceMap": false,
          "allowSyntheticDefaultImports": true,
          "esModuleInterop": true,
          "strict": true,
          "strictFunctionTypes": true,
          "strictNullChecks": true,
          "alwaysStrict": true,
          "noImplicitAny": true,
          "noImplicitReturns": true,
          "noImplicitThis": true,
          "skipLibCheck": true
        },
        "include": [
          "./src/**/*"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.test.tsx",
          "src/**/*/testHelpers/*.tsx",
          "src/**/*/testHelpers/*.ts"
        ],
        "ts-node": {
          "esm": true,
          "compilerOptions": {
            "module": "nodenext"
          }
        }
      },
      "tsconfig.json": {
        "compilerOptions": {
          "target": "ESNext",
          "jsx": "react-jsx",
          "experimentalDecorators": true,
          "module": "ESNext",
          "moduleResolution": "node",
          "paths": {
            "project/*": [
              "./project/src/*"
            ]
          },
          "resolveJsonModule": true,
          "allowJs": true,
          "strict": true,
          "strictFunctionTypes": true,
          "strictNullChecks": true,
          "alwaysStrict": true,
          "noImplicitAny": true,
          "noImplicitReturns": true,
          "noImplicitThis": true,
          "allowSyntheticDefaultImports": true,
          "esModuleInterop": true
        },
        "include": [
          "project/src/**/*"
        ]
      },
      "tsconfig.test.json": {
        "extends": "./tsconfig.json",
        "include": [
          "src/test.ts",
          "src/**/*.spec.ts",
          "src/**/*.d.ts"
        ]
      },
      ".gitignore": [
        ".env",
        "",
        "# dependencies",
        "node_modules",
        "tests/**/*/node_modules",
        "tests/**/*/yarn.lock",
        "",
        "# testing",
        "/coverage",
        "",
        "# production",
        ".idea/",
        ".DS_Store",
        "build",
        "dist",
        "",
        "yarn-debug.log*",
        "yrn-error.log*",
        "yarn-error.log",
        ".yarn/cache",
        "",
        ".history",
        ""
      ]
    },
    "fileStructure": "pg-template-structure-react-typescript",
    "builder": "esbuild"
  }
}
